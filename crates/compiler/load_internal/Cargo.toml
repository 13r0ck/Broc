[package]
name = "broc_load_internal"
description = "The internal implementation of broc_load, separate from broc_load to support caching."

authors.workspace = true
edition.workspace = true
license.workspace = true
version.workspace = true

[dependencies]
broc_builtins = { path = "../builtins" }
broc_can = { path = "../can" }
broc_collections = { path = "../collections" }
broc_constrain = { path = "../constrain" }
broc_debug_flags = { path = "../debug_flags" }
broc_derive = { path = "../derive" }
broc_derive_key = { path = "../derive_key" }
broc_error_macros = { path = "../../error_macros" }
broc_late_solve = { path = "../late_solve" }
broc_module = { path = "../module" }
broc_mono = { path = "../mono" }
broc_packaging = { path = "../../packaging" }
broc_parse = { path = "../parse" }
broc_problem = { path = "../problem" }
broc_region = { path = "../region" }
broc_reporting = { path = "../../reporting" }
broc_solve = { path = "../solve" }
broc_solve_problem = { path = "../solve_problem" }
broc_target = { path = "../broc_target" }
broc_tracing = { path = "../../tracing" }
broc_types = { path = "../types" }
broc_unify = { path = "../unify" }

ven_pretty = { path = "../../vendor/pretty" }

bumpalo.workspace = true
crossbeam.workspace = true
parking_lot.workspace = true
tempfile.workspace = true

[dev-dependencies]
broc_test_utils = { path = "../../test_utils" }

indoc.workspace = true
maplit.workspace = true
pretty_assertions.workspace = true
