[package]
name = "broc_mono"
description = "Broc's main intermediate representation (IR), which is responsible for monomorphization, defunctionalization, inserting ref-count instructions, and transforming a Broc program into a form that is easy to consume by a backend."

authors.workspace = true
edition.workspace = true
license.workspace = true
version.workspace = true

[dependencies]
broc_builtins = { path = "../builtins" }
broc_can = { path = "../can" }
broc_collections = { path = "../collections" }
broc_debug_flags = { path = "../debug_flags" }
broc_derive = { path = "../derive" }
broc_derive_key = { path = "../derive_key" }
broc_error_macros = { path = "../../error_macros" }
broc_exhaustive = { path = "../exhaustive" }
broc_late_solve = { path = "../late_solve" }
broc_module = { path = "../module" }
broc_problem = { path = "../problem" }
broc_region = { path = "../region" }
broc_std = { path = "../../broc_std" }
broc_target = { path = "../broc_target" }
broc_tracing = { path = "../../tracing" }
broc_types = { path = "../types" }
ven_pretty = { path = "../../vendor/pretty" }

bitvec.workspace = true
bumpalo.workspace = true
hashbrown.workspace = true
parking_lot.workspace = true
static_assertions.workspace = true
